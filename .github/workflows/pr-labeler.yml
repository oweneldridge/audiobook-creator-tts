name: PR Labeler

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  label-pr:
    name: Auto-label Pull Requests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Label based on changed files
      uses: actions/labeler@v5
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        configuration-path: .github/labeler.yml

    - name: Label PR size
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const additions = pr.additions;
          const deletions = pr.deletions;
          const totalChanges = additions + deletions;

          let sizeLabel = '';
          if (totalChanges < 10) {
            sizeLabel = 'size/XS';
          } else if (totalChanges < 50) {
            sizeLabel = 'size/S';
          } else if (totalChanges < 200) {
            sizeLabel = 'size/M';
          } else if (totalChanges < 500) {
            sizeLabel = 'size/L';
          } else {
            sizeLabel = 'size/XL';
          }

          // Remove existing size labels
          const existingLabels = pr.labels.map(l => l.name);
          const sizeLabels = existingLabels.filter(l => l.startsWith('size/'));

          for (const label of sizeLabels) {
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              name: label
            });
          }

          // Add new size label
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pr.number,
            labels: [sizeLabel]
          });

    - name: Check for breaking changes
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const title = pr.title.toLowerCase();
          const body = pr.body?.toLowerCase() || '';

          if (title.includes('breaking') || body.includes('breaking change')) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: ['breaking-change']
            });
          }

    - name: Add needs-review label
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;

          // Add needs-review label if not already present
          const existingLabels = pr.labels.map(l => l.name);
          if (!existingLabels.includes('needs-review')) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: ['needs-review']
            });
          }
