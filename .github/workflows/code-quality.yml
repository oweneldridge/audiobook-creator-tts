name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Sundays at 12:00 UTC
    - cron: '0 12 * * 0'
  workflow_dispatch:

jobs:
  complexity-analysis:
    name: Complexity Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install radon xenon mccabe

    - name: Run Radon complexity analysis
      run: |
        echo "# Cyclomatic Complexity Report" > complexity-report.md
        echo "Generated on: $(date)" >> complexity-report.md
        echo "" >> complexity-report.md
        radon cc . -a -s || true
        echo "" >> complexity-report.md
        echo "## Maintainability Index" >> complexity-report.md
        radon mi . -s || true

    - name: Check complexity thresholds
      run: |
        xenon --max-absolute B --max-modules A --max-average A . || echo "⚠️ Complexity thresholds exceeded"
      continue-on-error: true

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Bandit
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml]

    - name: Run Bandit security scan
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -f txt || echo "⚠️ Security issues found"
      continue-on-error: true

    - name: Upload Bandit report
      uses: actions/upload-artifact@v4
      with:
        name: bandit-security-report
        path: bandit-report.json
      if: always()

  code-duplication:
    name: Code Duplication Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install tools
      run: |
        python -m pip install --upgrade pip
        pip install pylint

    - name: Check for code duplication
      run: |
        pylint --disable=all --enable=duplicate-code *.py tests/ || echo "⚠️ Code duplication detected"
      continue-on-error: true

  documentation-coverage:
    name: Documentation Coverage
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install interrogate pydocstyle

    - name: Check docstring coverage
      run: |
        interrogate -v . --fail-under=60 || echo "⚠️ Docstring coverage below threshold"
      continue-on-error: true

    - name: Check docstring style
      run: |
        pydocstyle *.py --count || echo "⚠️ Docstring style issues found"
      continue-on-error: true

  code-metrics:
    name: Code Metrics Report
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install radon

    - name: Generate code metrics
      run: |
        echo "# Code Metrics Report" > metrics-report.md
        echo "Generated on: $(date)" >> metrics-report.md
        echo "" >> metrics-report.md

        echo "## Lines of Code" >> metrics-report.md
        echo '```' >> metrics-report.md
        radon raw . -s >> metrics-report.md
        echo '```' >> metrics-report.md
        echo "" >> metrics-report.md

        echo "## Cyclomatic Complexity" >> metrics-report.md
        echo '```' >> metrics-report.md
        radon cc . -a -s >> metrics-report.md
        echo '```' >> metrics-report.md
        echo "" >> metrics-report.md

        echo "## Maintainability Index" >> metrics-report.md
        echo '```' >> metrics-report.md
        radon mi . -s >> metrics-report.md
        echo '```' >> metrics-report.md

    - name: Upload metrics report
      uses: actions/upload-artifact@v4
      with:
        name: code-metrics-report
        path: metrics-report.md

  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Run comprehensive Pylint analysis
      run: |
        pylint *.py --output-format=text --reports=y > pylint-report.txt || true
        cat pylint-report.txt

    - name: Upload Pylint report
      uses: actions/upload-artifact@v4
      with:
        name: pylint-report
        path: pylint-report.txt
      if: always()
